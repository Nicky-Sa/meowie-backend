name: Deploy to EC2 using ECR + SSM

on:
  push:
    branches:
      - preview
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    env:
      DOCKER_BUILDKIT: 1
      BUILD_ENV: ${{ github.ref_name }}
      IMAGE_TAG: ${{ github.ref_name }}-${{ github.run_number }}
      ECR_BASE_URL: ${{ secrets.ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} \
            | docker login --username AWS --password-stdin \
              ${{ env.ECR_BASE_URL }}

      - name: Upload source maps to Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          npm ci
          npm run build
          npm run sentry:sourcemaps


      - name: Build and Push Docker image
        run: |
          docker build \
            --platform linux/arm64 \
            --build-arg BUILD_ENV=${{ env.BUILD_ENV }} \
            -t ${{ env.ECR_BASE_URL }}/${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }} \
            .
          
          docker push ${{ env.ECR_BASE_URL }}/${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }}

      - name: Trigger EC2 Deploy via SSM
        uses: thomasvjoseph/aws-ssm-send@v1.0.0
        id: ssm-send
        with:
          region: ${{ vars.AWS_REGION }}
          instance-id: ${{ secrets.EC2_INSTANCE_ID }}
          commands: |
            echo "y" | docker system prune -a
            cd /home/ubuntu/meowie-backend/${{ env.BUILD_ENV }}
            rm -rf .env.local
            echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> .env.local
            echo "OMDB_API_KEY=${{ secrets.OMDB_API_KEY }}" >> .env.local
            echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env.local
            echo "PORT=${{ vars.PORT }}" >> .env.local
            echo "BUILD_ENV=${{ env.BUILD_ENV }}" >> .env.local
            
            aws ecr get-login-password --region ${{ vars.AWS_REGION }} \
            | docker login --username AWS --password-stdin \
              ${{ env.ECR_BASE_URL }}
            
            IMAGE="${{ env.ECR_BASE_URL }}/${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }}"
            docker pull $IMAGE
            docker stop meowie-${{ env.BUILD_ENV }} || true
            docker rm meowie-${{ env.BUILD_ENV }} || true
            docker run --restart unless-stopped -d --name meowie-${{ env.BUILD_ENV }} \
            --env-file .env.local \
            -p ${{ vars.PORT }}:${{ vars.PORT }} \
            $IMAGE
            
            rm -rf .env.local
